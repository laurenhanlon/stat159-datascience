head(pop14)
colnames(pop14)
pop14[, "Cenus"]
pop14["Cenus",]
pop14[2,]
pop14[,2]
pop14[, c("2010", "2011")]
pop14[ ,c("[EMPTY")]
pop14[,1]
colname(pop14[,1]) <- "States"
head(pop14)
names(pop14)[1] <- "State"
head(pop14)
names(pop14)[1] <- "state"
pop14[ ,c("state", "2014")]
newpop14 <- pop14[ ,c("state", "2014")]
newpop14
head(newpop14)
head(pop77)
head(newpop14)
head(pop77df)
names(pop14)[1] <- "states"
newpop14 <- pop14[ ,c("states", "2014")]
mergedata <- merge(pop77df, newpop14, by.x = "states")
mergedata
is.data.frame(newpop14)
is.data.frame(pop77df)
mergedata <- merge(pop77df, newpop14)
print(mergedata)
mergedata <- merge(pop77df, newpop14, by.x = "states")
print(mergedata)
mergedata <- merge(pop77df, newpop14, by.x = "states", all = TRUE)
print(mergedata)
mergedata <- merge(newpop14, pop77df, by.x = "states", all = TRUE)
print(mergedata)
mergedata <- merge(newpop14, pop77df, by.x = "states")
print(mergedata)
mergedata <- merge(newpop14, pop77df)
print(mergedata)
mergedata <- merge(newpop14, pop77df, by.data.frame(pop77df))
print(mergedata)
mergedata <- merge(newpop14, pop77df, by = "states")
print(mergedata)
mode(newpop14)
data.frame(newpop14)
newpop14 <- data.frame(newpop14)
mergedata <- merge(newpop14, pop77df, by = "states")
print(mergedata)
head(newpop14)
names(pop14)[1] <- "states"
newpop14 <- pop14[ ,c("states", "2014")]
np14 <- data.frame(newpop14)
is.data.frame(np14)
is.data.frame(pop77df)
merge(np14, pop77df)
mergedata <- merge(np, pop77df, by = "states", all = TRUE)
mergedata <- merge(np14, pop77df, by = "states", all = TRUE)
print(mergedata)
mergedata[complete.cases(mergedata),]
tail(newpop14)
newpop77[59]
newpop14[59]
newpop14
np
np14
as.data.frame(np14)
np14 <- np14[, 1:58]
np14 <- np14[, c(1:58)]
np14 <- np14[, (1:58)]
np14[,4]
np14
np14[5]
pop14
new14 <- pop14[ ,c("2014")]
new14
new14 <- data.frame(pop14[ ,c("2014")])
new14
new14$states <- names(pop14)[1]
new14
names(pop14)[1]
pop14$names
pop14$states
pop14$states[1:58]
new14 <- data.frame(pop14[ ,c("2014")])
new14
n14$states <- pop14[ ,c("2014")]
n14 <- data.frame(pop14[,c("2014")])
n14
n14 <- n14[1:58]
n14[51]
n14 <- data.frame()
n14
n14$year <- pop14[,c("2014")]
n14 <- data.frame(pop14[,c("2014")])
n14
n14$states <- pop$states[1:63]
n14$states <- pop14$states[1:63]
n14
n14[,(1:58)]
names(pop14)[1] <- "states"
newpop14 <- pop14[ ,c("states", "2014")]
np14 <- data.frame(newpop14)
head(np14)
mergedata <- merge(np14, pop77df, by = "states", all = TRUE)
print(mergedata)
url = 'http://nflsavant.com/dump/weather_20131231.csv'
raw_nflweather.csv <- read.csv(file = url, )
raw_nflweather.csv
View(raw_nflweather.csv)
str(raw_nflweather.csv)
head(raw_nflweather.csv)
tail(raw_nflweather.csv)
rdata <- raw_nflweather.csv
rdata
rdata$humidity
gsub("%", "", rdata$humidity)
rdata$humidity <- rdata$humidity * 0.01
rdata$humidity <- as.numeric(rdata$humidity) * 0.01
rdata$humidity
rdata <- raw_nflweather.csv
gsub("%", "", rdata$humidity)
rdata$humidity <- as.numeric(rdata$humidity)
rdata$humidity
rdata$humidity <- rdata$humidity * 0.01
rdata$humidity
grep(pattern = "^([0123456789][0123456789]", x = rdata$weather)
grep(pattern = "^([0123456789][0123456789])", x = rdata$weather)
help(substr)
substr(rdata$weather, 1, 2)
rdata$temperature2 <- as.numeric(substr(rdata$weather, 1, 2))
rdata$temperature2
head(substr(rdata$weather, 4, 5))
head(substr(rdata$weather, 31, 32))
rdata$humidity2 <- as.numeric(substr(rdata$weather, 31, 32))
head(rdata$humidity)
head(rdata$humidity2)
head(substr(rdata$weather, 41, 42))
rdata$wind2 <- as.numeric(substr(rdata$weather, 41, 42))
head(rdata$wind2)
View(rdata)
rdata$temperature == rdata$temperature2
summary(temperature)
summary(rdata$temperature)
summary(rdata$temperature2)
summary(rdata$temperature) == summary(rdata$temperature2)
summary(rdata$temperature) == summary(rdata$temperature2)
summary(rdata$humidity)
summary(rdata$humidity2)
rdata$humidity2 <- rdata$humidity2 * .01
rdata <- raw_nflweather.csv
rdata$humidity <- as.numeric(rdata$humidity)
rdata <- raw_nflweather.csv
gsub("%", "", rdata$humidity)
gsub("%", "", rdata$humidity)
rdata$humidity <- as.numeric(rdata$humidity)
rdata$humidity <- rdata$humidity * 0.01
rdata$humidity <- rdata$humidity + 0.04
library(XML)
??XML
install.packages("XML")
library(XML)
theurl <- "http://www.charitynavigator.org/index.cfm?bay=search.summary&orgid=3628#.VirPD2SrS1s"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
tables[[which.max(n.rows)]]
write.table(n.rows,file= "Scrape1.csv", row.names = TRUE)
print("Scrape1.csv")
tb <- write.table(n.rows,file= "Scrape1.csv", row.names = TRUE)
tb
tables[[which.max(n.rows)]]
write.table(n.rows,file= "Scrape1.csv", row.names = TRUE)
help(write.table)
print(write.table(n.rows,file= "Scrape1.csv", row.names = TRUE))
return(write.table(n.rows,file= "Scrape1.csv", row.names = TRUE))
write.table(n.rows,file= "Scrape1.csv", row.names = TRUE)
scrape1.csv
"Scrape1.csv"
n.rows
tables
tables[[which.max(n.rows)]]
mode(tables[[which.max(n.rows)]])
as.data.frame(tables[[which.max(n.rows)]])
df <- as.data.frame(tables[[which.max(n.rows)]])
df
df[1]
df[1,1]
levels(df)
df[2]
df[1, 2]
df
df[2,1]
df[[2]]
df[[2, 1]]
df[1,2]
colnames(df) <- c("Type", "Money")
df["Type"]
df["Type" == "Contributions"]
df["Type" == Contributions]
df$type
df$Type
df$Money[df$Type == "Contributions"]
df$Money[df$Type == "Contributions"][1]
df$Money[df$Type == "Contributions"]
df
df$Money[df$Type == "Membership Dues"]
colnames(df) <- c("Name", "Amount")
df$Amount[df$Name == "Membership Dues"]
df$Amount[df$Name == "Program Expenses"]
df
U <- df$Amount[df$Name == "Program Expenses"]
U
V <- df$Amount[df$Name == "Administrative Expenses"]
V
W <- df$Amount[df$Name == "TOTAL REVENUE"]
W
Y <- df$Amount[df$Name == "Other revenue"]
Y
Y <- df$Amount[df$Name == "Other Revenue"]
Y
df
AC <- df$Amount[df$Name == "Excess (or Deficit) for the year"]
AC
AE <- df$Amount[df$Name == "Total Primary Revenue"]
AE
AF <- df$Amount[df$Name == "Payments to Affiliates"]
AF
tables <- readHTMLTable(theurl)
print(tables)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
n.rows
tables[[which.max(n.rows)]]
bleh <- unlist(lapply(tables, function(t) dim(t)[2]))
bleh
tables[[which.max(bleh)]]
bleh <- unlist(lapply(tables, function(t) dim(t)[3]))
bleh <- unlist(lapply(tables, function(t) dim(t)[3]))
tables[[which.max(bleh)]]
bleh <- unlist(lapply(tables, function(t) dim(t)[4]))
tables[[which.max(bleh)]]
bleh <- unlist(lapply(tables, function(t) dim(t)[5]))
tables[[which.max(bleh)]]
bleh <- unlist(lapply(tables, function(t) dim(t)[1,1]))
bleh <- unlist(lapply(tables, function(t) dim(t)[2]))
tables[[which.max(bleh)]]
tables
help(unlist)
help(lapply)
doc = xmlParse(url)
??xmlParse
library(xmlParse)
install.packages(xmlParse)
install.packages(Libxml2)
library(Libxml2)
url <- "http://www.charitynavigator.org/index.cfm?bay=search.alpha&ltr=A"
tablez <- scrape(url)
library(XML)
url <- "http://www.charitynavigator.org/index.cfm?bay=search.alpha&ltr=A"
tablez <- scrape(url)
library(scrapeR)
url <- "http://www.charitynavigator.org/index.cfm?bay=search.alpha&ltr=A"
tablez <- scrape(url)
mode(tablez)
unlist(tablez)
tablez <- scrape(url)
as.data.frame(tablez)
help(lapply)
x <- rnorm(50, 0, 2)
y <- x
K <- 2
y[i] <- floor(x[i]) + K }
for (i in 1:length(y)) {
y[i] <- floor(x[i]) + K }
for (i in 1:length(y)) {
K <- 2
y[i] <- floor(x[i]) + K }
y
x <- rnorm(50, 0, 2)
y <- floor(x) + 2
y
floor(2)
floor(2.2)
ceiling(2.4)
floor(2.9)
x <- rnorm(50, 0, 2)
x
y <- floor(x) + 2
y
mean(x)
mean(y)
sd(x)
sd(y)
x <- rnorm(20) y <- x
x <- rnorm(20)
y <- x
for (i in 1:length(x)) { if (x[i] < -1) {
y[i] <- 0
} else {
if (x[i] > 1) {
y[i] <- 1
} else y[i] <- 3 * x[i]^2
}
}
x <- rnorm(20)
x <- rnorm(20)
x
y <- 3 * x^2
x <- rnorm(20)
y <- 3 * x^2
y[x < -1] <- 0
y[x > 1] <- 1
y
x <- rnorm(20)
x
is.list(x)
y[x != -1 && x != 1] <- 3 * y^2
y
x <- rnorm(20)
y <- 3 * x^2
y[x < -1] <- 0
y[x > 1] <- 1
x <- rnorm(20)
y <- x
y <- 3 * x^2
y[x < -1] <- 0
y[x > 1] <- 1
z <- x
z[x < -1] <- 0
z[x > 1] <- 1
z[x != -1 && x != 1] <- 3 * z^2
y
z
z <- x
z[x < -1] <- 0
z[x > 1] <- 1
z[x != -1 && x != 1] <- 3 * x^2
y
z
players <- list(
warriors = c('kurry', 'iguodala', 'thompson', 'green'),
cavaliers = c('james', 'shumpert', 'thompson'),
rockets = c('harden', 'howard')
)
lapply(players, toupper)
lapply(players, tolower)
players$warriors
lapply(players, paste, collapse = '-')
players
lapply(players, nchar())
lapply(players, nchar
)
lapply(players$warriors, toupper)
lapply(players, function(x) paste('mr', x))
df <- data.frame(
name = c('Luke', 'Leia', 'R2-D2', 'C-3PO'),
gender = c('male', 'female', 'male', 'male'),
height = c(1.72, 1.50, 0.96, 1.67),
weight = c(77, 49, 32, 75)
)
lapply(df, class)
sapply(df, class)
sapply(players, length)
sapply(players, nchar)
(m <- matrix(1:20, 4, 5))
apply(m, 1, median)
help(apply)
apply(m, median)
apply(m, 2, median)
tapply(df$height, df$gender, mean)
lapply(df, class)
sapply(df, class)
tapply(df$weight, df$gender, mean)
help(scale)
help(rpart)
library(rpart)
help(rpart)
help(predict)
help(ls)
install.packages("XML")
library(XML)
theurl <- "https://www.instagram.com/365daysoflauren/"
tables <- readHTMLTable(theurl)
source('~/Desktop/Work/smileygo/SGwebscraping_findcharity.R')
x <- rand(10, 1, 10)
reg
setwd("~/Desktop/Fall2016/stat159-datascience/stat159-hw02/code")
getwd()
# Getting the data
setwd("../")
setwd(paste(getwd(),"/data",sep=""))
getwd()
advertising <- read.table('Advertising.csv', header=TRUE, sep=',')
# Linear regression
reg = lm(Sales ~ TV, data=advertising)
summary = summary(reg)
reg
library(ggplot2)
scatterplot = (ggplot(data=advertising, aes(TV, Sales))
+ ggtitle('TV vs. Sales')
+ geom_point(color='gold')
+ stat_smooth(method="lm"))
scatterplot
getwd()
setwd("../")
setwd(paste(getwd(),"/data",sep=""))
getwd()
load("regression.RData", ex <- new.env())
ls.str(ex)
setwd("~/Desktop/Fall2016/stat159-datascience/stat159-hw02/code")
getwd()
# Getting the data
setwd("../")
setwd(paste(getwd(),"/data",sep=""))
getwd()
advertising <- read.table('Advertising.csv', header=TRUE, sep=',')
# Linear regression
reg = lm(Sales ~ TV, data=advertising)
summary = summary(reg)
library(ggplot2)
scatterplot = (ggplot(data=advertising, aes(TV, Sales))
+ ggtitle('TV vs. Sales')
+ geom_point(color='gold')
+ stat_smooth(method="lm"))
scatterplot
capture.output(summary, scatterplot, file = "../data/regression.RData")
reg_summary = summary(reg)
capture.output(reg_summary, scatterplot, file = "../data/regression.RData")
img <- readPNG(system.file('img', 'histogram-tv.png', package='png'))
library(readPNG)
install.packages('readPNG')
library(readPNG)
install.packages('libpng')
library(png)
install.packages('png')
library(png)
setwd("../")
setwd(paste(getwd(),"/images",sep=""))
getwd()
img <- readPNG(system.file('img', 'histogram-tv.png', package='png'))
img.n <- readPNG(system.file('img', 'histogram-tv.png', package='png'), TRUE)
setwd("../")
setwd(paste(getwd(),"/report",sep=""))
getwd()
library(stargazer)
summary = read.table('eda-output.txt', sep='\t')
stargazer(summary)
summary_stats = read.table('../data/eda-output.txt')
summary_stats = read.table('../data/eda-output.txt', sep='\t')
capture.output(reg_summary, file = "regression-output.txt")
reg_summary
save(reg_summary, scatterplot, file = "../data/regression.RData")
load(regression.RData)
load(./data/regression.RData)
load(../data/regression.RData)
load('../data/regression.RData')
reg_summary
reg_summary
stargazer(reg_summary)
is.atomic(reg_summary)
summary_stats
type(summary_stats)
df(summary_stats)
class(summary_stats)
class(reg_summary)
stargazer(attitude)
advertising <- read.table('../data/Advertising.csv', header=TRUE, sep=',')
tv_sales = c('TV', 'Sales')
subset = advertising[tv_sales]
setwd("~/Desktop/Fall2016/stat159-datascience/stat159-hw02/code")
getwd()
advertising <- read.table('../data/Advertising.csv', header=TRUE, sep=',')
tv_sales = c('TV', 'Sales')
subset = advertising[tv_sales]
s <- summary(subset)
capture.output(s, file = "../data/eda-output.txt")
pdf('../images/histogram-tv.pdf')
hist(advertising$TV, xlab='TV (in thousands)', breaks=20, main='TV Histogram', col='blue', ylim=c(0, 20))
dev.off()
png('../images/histogram-tv.png')
hist(advertising$TV, xlab='TV (in thousands)', breaks=20, main='TV Histogram', col='lightblue', ylim=c(0, 20))
dev.off()
pdf('../images/histogram-sales.pdf')
hist(advertising$Sales, xlab='Sales (in thousands)', breaks=15, main='Sales Histogram', col='limegreen', xlim=c(0,30), ylim=c(0, 40))
dev.off()
png('../images/histogram-sales.png')
hist(advertising$Sales, xlab='Sales (in thousands)', breaks=15, main='Sales Histogram', col='limegreen', xlim=c(0,30), ylim=c(0, 40))
dev.off()
png('../images/histogram-tv.png')
hist(advertising$TV, xlab='TV (in thousands)', breaks=20, main='TV Histogram', col='blue', ylim=c(0, 20))
dev.off()
## Sales
pdf('../images/histogram-sales.pdf')
hist(advertising$Sales, xlab='Sales (in thousands)', breaks=15, main='Sales Histogram', col='lightblue', xlim=c(0,30), ylim=c(0, 40))
dev.off()
png('../images/histogram-sales.png')
hist(advertising$Sales, xlab='Sales (in thousands)', breaks=15, main='Sales Histogram', col='lightblue', xlim=c(0,30), ylim=c(0, 40))
dev.off()
advertising <- read.table('../data/Advertising.csv', header=TRUE, sep=',')
reg = lm(Sales ~ TV, data=advertising)
reg_summary = summary(reg)
library(ggplot2)
scatterplot = (ggplot(data=advertising, aes(TV, Sales))
+ ggtitle('TV vs. Sales')
+ geom_point(color='gold')
+ stat_smooth(method="lm"))
scatterplot
pdf('../images/scatterplot-tv-sales.pdf')
scatterplot
dev.off()
png('../images/scatterplot-tv-sales.png')
scatterplot
dev.off()
save(reg_summary, scatterplot, file = "../data/regression.RData")
